name: Monthly Rohlik sync

on:
  workflow_dispatch:
  schedule:
    # Běží každý měsíc 2. den v 05:10 UTC
    - cron: "10 5 2 * *"

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          set -eux
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
            pip install selenium webdriver-manager google-auth google-auth-oauthlib google-api-python-client
          fi

      - name: Restore Google credentials from secrets
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
          GOOGLE_TOKEN_JSON:       ${{ secrets.GOOGLE_TOKEN_JSON }}
        run: |
          python - <<'PY'
          import os, pathlib
          root = pathlib.Path(".")
          cred = os.environ.get("GOOGLE_CREDENTIALS_JSON")
          tok  = os.environ.get("GOOGLE_TOKEN_JSON")
          if not cred or not tok:
              raise SystemExit("Missing GOOGLE_CREDENTIALS_JSON or GOOGLE_TOKEN_JSON secrets.")
          root.joinpath("credentials.json").write_text(cred, encoding="utf-8")
          root.joinpath("token.json").write_text(tok, encoding="utf-8")
          print("credentials.json and token.json written.")
          PY

      - name: Run sync (headless)
        env:
          ROHLIK_ID:  ${{ secrets.ROHLIK_ID }}
          ROHLIK_PIN: ${{ secrets.ROHLIK_PIN }}
          GCAL_CALENDAR_NAME: ${{ vars.GCAL_CALENDAR_NAME }}
        run: |
          set -e
          echo "ROHLIK_ID and ROHLIK_PIN present ✔"
          python rohlik_sync.py --headless --calendar-name "${GCAL_CALENDAR_NAME:-Rohlik směny}"

      - name: Upload artifacts (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug
          path: |
            grid.html
            grid.png
            candidates.txt
          if-no-files-found: ignore
